/*
 * Copyright (c) 2020 The ZMK Contributors
 * 
 * SPDX-License-Identifier: MIT
 * updated by me on oct 22
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_rshift {
            bindings = <&kp RSHFT>;
            key-positions = <34 33>;
            layers = <0 1>;
        };

        combo_del {
            bindings = <&kp DEL>;
            key-positions = <11 10>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O    &kp P     &kp BACKSPACE
&kp LCTRL       &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp LEFT_BRACKET
                              &kp LEFT_GUI  &mo 2  &kp SPACE    &kp ENTER  &mo 3  &kp RIGHT_ALT
            >;
        };

        DVORAK {
            bindings = <
&trans  &kp SQT   &kp COMMA  &kp DOT  &kp P   &kp Y     &kp F   &kp G   &kp C   &kp R  &kp L  &trans
&trans  &kp A     &kp O      &kp E    &kp U   &kp I     &kp D   &kp H   &kp T   &kp N  &kp S  &kp MINUS
&trans  &kp SEMI  &kp Q      &kp J    &kp K   &kp X     &kp B   &kp M   &kp W   &kp V  &kp Z  &kp SLASH
                             &trans   &trans  &trans    &trans  &trans  &trans
            >;
        };

        nums+symbols {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND         &kp ASTERISK           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans     &kp N1           &kp N2       &kp N3     &kp N4      &kp N5         &kp N6     &kp N7                &kp N8                 &kp N9            &kp N0             &kp SLASH
&trans     &kp LS(Z)        &trans       &trans     &trans      &trans         &kp BSLH   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS         &kp EQUAL          &trans
                                         &trans     &trans      &trans         &trans     &trans                &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE      &kp C_VOL_UP  &kp C_PREV        &kp C_PP     &kp C_NEXT     &kp C_MUTE         &trans
&trans  &trans      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MULTIPLY    &kp C_VOL_DN  &kp LEFT          &kp UP       &kp DOWN       &kp RIGHT          &kp END
&trans  &kp KP_DOT  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MINUS       &kp HOME      &kp LC(LG(LEFT))  &kp PAGE_UP  &kp PAGE_DOWN  &kp LG(LC(RIGHT))  &kp INSERT
                                     &kp KP_NUMBER_0  &kp KP_PLUS      &trans             &trans        &trans            &trans
            >;
        };

        layer_4 {
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5         &kp F6       &kp F7  &kp F8  &kp F9  &kp F10  &kp F12
&trans   &trans  &trans  &trans  &tog 1  &sys_reset     &sys_reset   &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans   &trans
                         &trans  &trans  &trans         &trans       &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
